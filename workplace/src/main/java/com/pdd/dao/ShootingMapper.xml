<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pdd.dao.ShootingMapper" >
  <resultMap id="BaseResultMap" type="com.pdd.entity.Shooting" >
    <id column="shooting_id" property="shootingId" jdbcType="INTEGER" />
    <result column="shooting_rear_camera" property="shootingRearCamera" jdbcType="VARCHAR" />
    <result column="shooting_front_camera" property="shootingFrontCamera" jdbcType="VARCHAR" />
    <result column="shooting_flash" property="shootingFlash" jdbcType="VARCHAR" />
    <result column="shooting_video_shooting" property="shootingVideoShooting" jdbcType="VARCHAR" />
    <result column="shooting_zoom_mode" property="shootingZoomMode" jdbcType="VARCHAR" />
    <result column="shooting_photo_resolution" property="shootingPhotoResolution" jdbcType="VARCHAR" />
    <result column="shooting_shooting_function" property="shootingShootingFunction" jdbcType="VARCHAR" />
    <result column="shooting_goodsid" property="shootingGoodsid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    shooting_id, shooting_rear_camera, shooting_front_camera, shooting_flash, shooting_video_shooting, 
    shooting_zoom_mode, shooting_photo_resolution, shooting_shooting_function, shooting_goodsid
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from shooting
    where shooting_id = #{shootingId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from shooting
    where shooting_id = #{shootingId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.pdd.entity.Shooting" >
    insert into shooting (shooting_id, shooting_rear_camera, shooting_front_camera, 
      shooting_flash, shooting_video_shooting, shooting_zoom_mode, 
      shooting_photo_resolution, shooting_shooting_function, 
      shooting_goodsid)
    values (#{shootingId,jdbcType=INTEGER}, #{shootingRearCamera,jdbcType=VARCHAR}, #{shootingFrontCamera,jdbcType=VARCHAR}, 
      #{shootingFlash,jdbcType=VARCHAR}, #{shootingVideoShooting,jdbcType=VARCHAR}, #{shootingZoomMode,jdbcType=VARCHAR}, 
      #{shootingPhotoResolution,jdbcType=VARCHAR}, #{shootingShootingFunction,jdbcType=VARCHAR}, 
      #{shootingGoodsid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.pdd.entity.Shooting" >
    insert into shooting
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="shootingId != null" >
        shooting_id,
      </if>
      <if test="shootingRearCamera != null" >
        shooting_rear_camera,
      </if>
      <if test="shootingFrontCamera != null" >
        shooting_front_camera,
      </if>
      <if test="shootingFlash != null" >
        shooting_flash,
      </if>
      <if test="shootingVideoShooting != null" >
        shooting_video_shooting,
      </if>
      <if test="shootingZoomMode != null" >
        shooting_zoom_mode,
      </if>
      <if test="shootingPhotoResolution != null" >
        shooting_photo_resolution,
      </if>
      <if test="shootingShootingFunction != null" >
        shooting_shooting_function,
      </if>
      <if test="shootingGoodsid != null" >
        shooting_goodsid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="shootingId != null" >
        #{shootingId,jdbcType=INTEGER},
      </if>
      <if test="shootingRearCamera != null" >
        #{shootingRearCamera,jdbcType=VARCHAR},
      </if>
      <if test="shootingFrontCamera != null" >
        #{shootingFrontCamera,jdbcType=VARCHAR},
      </if>
      <if test="shootingFlash != null" >
        #{shootingFlash,jdbcType=VARCHAR},
      </if>
      <if test="shootingVideoShooting != null" >
        #{shootingVideoShooting,jdbcType=VARCHAR},
      </if>
      <if test="shootingZoomMode != null" >
        #{shootingZoomMode,jdbcType=VARCHAR},
      </if>
      <if test="shootingPhotoResolution != null" >
        #{shootingPhotoResolution,jdbcType=VARCHAR},
      </if>
      <if test="shootingShootingFunction != null" >
        #{shootingShootingFunction,jdbcType=VARCHAR},
      </if>
      <if test="shootingGoodsid != null" >
        #{shootingGoodsid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.pdd.entity.Shooting" >
    update shooting
    <set >
      <if test="shootingRearCamera != null" >
        shooting_rear_camera = #{shootingRearCamera,jdbcType=VARCHAR},
      </if>
      <if test="shootingFrontCamera != null" >
        shooting_front_camera = #{shootingFrontCamera,jdbcType=VARCHAR},
      </if>
      <if test="shootingFlash != null" >
        shooting_flash = #{shootingFlash,jdbcType=VARCHAR},
      </if>
      <if test="shootingVideoShooting != null" >
        shooting_video_shooting = #{shootingVideoShooting,jdbcType=VARCHAR},
      </if>
      <if test="shootingZoomMode != null" >
        shooting_zoom_mode = #{shootingZoomMode,jdbcType=VARCHAR},
      </if>
      <if test="shootingPhotoResolution != null" >
        shooting_photo_resolution = #{shootingPhotoResolution,jdbcType=VARCHAR},
      </if>
      <if test="shootingShootingFunction != null" >
        shooting_shooting_function = #{shootingShootingFunction,jdbcType=VARCHAR},
      </if>
      <if test="shootingGoodsid != null" >
        shooting_goodsid = #{shootingGoodsid,jdbcType=INTEGER},
      </if>
    </set>
    where shooting_id = #{shootingId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pdd.entity.Shooting" >
    update shooting
    set shooting_rear_camera = #{shootingRearCamera,jdbcType=VARCHAR},
      shooting_front_camera = #{shootingFrontCamera,jdbcType=VARCHAR},
      shooting_flash = #{shootingFlash,jdbcType=VARCHAR},
      shooting_video_shooting = #{shootingVideoShooting,jdbcType=VARCHAR},
      shooting_zoom_mode = #{shootingZoomMode,jdbcType=VARCHAR},
      shooting_photo_resolution = #{shootingPhotoResolution,jdbcType=VARCHAR},
      shooting_shooting_function = #{shootingShootingFunction,jdbcType=VARCHAR},
      shooting_goodsid = #{shootingGoodsid,jdbcType=INTEGER}
    where shooting_id = #{shootingId,jdbcType=INTEGER}
  </update>
</mapper>